// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221014215942_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("WebApi.Entities.CopyJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArchivePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdToUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathToFile")
                        .HasColumnType("TEXT");

                    b.Property<int>("Retries")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("processed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CopyJobs");
                });

            modelBuilder.Entity("WebApi.Entities.FFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArchivePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<int>("FFolderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Iszip")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentFolder")
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FFolderId");

                    b.ToTable("FFiles");
                });

            modelBuilder.Entity("WebApi.Entities.FFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FolderToMonitorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FolderToMonitorId");

                    b.ToTable("FFolders");
                });

            modelBuilder.Entity("WebApi.Entities.FolderScanJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FFolderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeAdded")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoldersScanJob");
                });

            modelBuilder.Entity("WebApi.Entities.FolderToMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Exists")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extensions")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<long>("MaxSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoldersToMonitor");
                });

            modelBuilder.Entity("WebApi.Entities.UniqueFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArchivedFilePath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FFileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Versions")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FFileId");

                    b.ToTable("UniqueFiles");
                });

            modelBuilder.Entity("WebApi.Entities.FFile", b =>
                {
                    b.HasOne("WebApi.Entities.FFolder", "FFolder")
                        .WithMany("FFiles")
                        .HasForeignKey("FFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FFolder");
                });

            modelBuilder.Entity("WebApi.Entities.FFolder", b =>
                {
                    b.HasOne("WebApi.Entities.FolderToMonitor", "FolderToMonitor")
                        .WithMany("FFolders")
                        .HasForeignKey("FolderToMonitorId");

                    b.Navigation("FolderToMonitor");
                });

            modelBuilder.Entity("WebApi.Entities.UniqueFile", b =>
                {
                    b.HasOne("WebApi.Entities.FFile", "FFile")
                        .WithMany()
                        .HasForeignKey("FFileId");

                    b.Navigation("FFile");
                });

            modelBuilder.Entity("WebApi.Entities.FFolder", b =>
                {
                    b.Navigation("FFiles");
                });

            modelBuilder.Entity("WebApi.Entities.FolderToMonitor", b =>
                {
                    b.Navigation("FFolders");
                });
#pragma warning restore 612, 618
        }
    }
}
